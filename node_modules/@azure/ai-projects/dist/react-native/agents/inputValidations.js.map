{"version":3,"file":"inputValidations.js","sourceRoot":"","sources":["../../../src/agents/inputValidations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  ToolDefinition,\n  UpdateToolResourcesOptions,\n  VectorStoreDataSource,\n} from \"../generated/src/models.js\";\n\nexport function validateVectorStoreDataType(data_sources: VectorStoreDataSource[]): void {\n  if (!data_sources.some((value) => ![\"uri_asset\", \"id_asset\"].includes(value.type))) {\n    throw new Error(\"Vector store data type must be one of 'uri_asset', 'id_asset'\");\n  }\n}\n\nexport function validateThreadId(threadId: string): void {\n  if (!threadId) {\n    throw new Error(\"Thread ID is required\");\n  }\n}\n\nexport function validateRunId(runId: string): void {\n  if (!runId) {\n    throw new Error(\"Run ID is required\");\n  }\n}\n\nexport function validateLimit(limit: number): void {\n  if (limit < 1 || limit > 100) {\n    throw new Error(\"Limit must be between 1 and 100\");\n  }\n}\n\nexport function validateOrder(order: string): void {\n  if (![\"asc\", \"desc\"].includes(order)) {\n    throw new Error(\"Order must be 'asc' or 'desc'\");\n  }\n}\n\nenum Tools {\n  CodeInterpreter = \"code_interpreter\",\n  FileSearch = \"file_search\",\n  Function = \"function\",\n  BingGrounding = \"bing_grounding\",\n  MicrosoftFabric = \"fabric_dataagent\",\n  SharepointGrounding = \"sharepoint_grounding\",\n  AzureAISearch = \"azure_ai_search\",\n  AzureFunction = \"azure_function\",\n}\n\nexport function validateTools(value: Array<ToolDefinition>): void {\n  if (value.some((tool) => !Object.values(Tools).includes(tool as unknown as Tools))) {\n    throw new Error(\n      \"Tool type must be one of 'code_interpreter', 'file_search', 'function', 'bing_grounding', 'fabric_dataagent', 'sharepoint_grounding', 'azure_ai_search', 'azure_function'\",\n    );\n  }\n}\n\nexport function validateMetadata(metadata: Record<string, string>): void {\n  if (Object.keys(metadata).length > 16) {\n    throw new Error(\"Only 16 key/value pairs are allowed\");\n  }\n  if (Object.keys(metadata).some((value) => value.length > 64)) {\n    throw new Error(\"Keys must be less than 64 characters\");\n  }\n  if (Object.values(metadata).some((value) => value.length > 512)) {\n    throw new Error(\"Values must be less than 512 characters\");\n  }\n}\n\nexport function validateToolResources(toolResource: UpdateToolResourcesOptions): void {\n  if (toolResource.code_interpreter) {\n    if (\n      toolResource.code_interpreter.file_ids &&\n      toolResource.code_interpreter.file_ids.length > 20\n    ) {\n      throw new Error(\"A maximum of 20 file IDs are allowed\");\n    }\n  }\n  if (toolResource.file_search) {\n    if (\n      toolResource.file_search.vector_store_ids &&\n      toolResource.file_search.vector_store_ids.length > 1\n    ) {\n      throw new Error(\"Only one vector store ID is allowed\");\n    }\n  }\n  if (toolResource.azure_ai_search) {\n    if (toolResource.azure_ai_search.indexes && toolResource.azure_ai_search.indexes.length > 1) {\n      throw new Error(\"Only one index is allowed\");\n    }\n  }\n}\n\nexport function validateVectorStoreId(vectorStoreId: string): void {\n  if (!vectorStoreId) {\n    throw new Error(\"Vector store ID is required\");\n  }\n}\n\nexport function validateFileId(fileId: string): void {\n  if (!fileId) {\n    throw new Error(\"File ID is required\");\n  }\n}\n\nenum FileBatchStatus {\n  InProgress = \"in_progress\",\n  Completed = \"completed\",\n  Failed = \"failed\",\n  Cancelled = \"cancelled\",\n}\n\nexport function validateFileStatusFilter(filter: string): void {\n  if (!Object.values(FileBatchStatus).includes(filter as FileBatchStatus)) {\n    throw new Error(\n      \"File status filter must be one of 'in_progress', 'completed', 'failed', 'cancelled'\",\n    );\n  }\n}\n\nenum Messages {\n  User = \"user\",\n  Assistants = \"assistant\",\n}\n\nexport function validateMessages(value: string): void {\n  if (!Object.values(Messages).includes(value as Messages)) {\n    throw new Error(\"Role must be either 'user' or 'assistant'\");\n  }\n}\n\nenum TruncationStrategy {\n  Auto = \"auto\",\n  LastMessages = \"last_messages\",\n}\n\nexport function validateTruncationStrategy(value: string): void {\n  if (!Object.values(TruncationStrategy).includes(value as TruncationStrategy)) {\n    throw new Error(\"Role must be either 'auto' or 'last_messages'\");\n  }\n}\n"]}