// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { TracingUtility, TracingOperationName } from "../tracing.js";
import { addInstructionsEvent, formatAgentApiResponse, UpdateWithAgentAttributes, } from "./traceUtility.js";
/**
 * Traces the start of creating or updating an agent.
 * @param span - The span to trace.
 * @param options - The options for creating an agent.
 */
export function traceStartCreateOrUpdateAgent(span, options, agentId) {
    var _a, _b, _c, _d, _e;
    const attributes = {
        operationName: TracingOperationName.CREATE_AGENT,
        name: (_a = options.body.name) !== null && _a !== void 0 ? _a : undefined,
        model: options.body.model,
        description: (_b = options.body.description) !== null && _b !== void 0 ? _b : undefined,
        instructions: (_c = options.body.instructions) !== null && _c !== void 0 ? _c : undefined,
        topP: (_d = options.body.top_p) !== null && _d !== void 0 ? _d : undefined,
        temperature: (_e = options.body.temperature) !== null && _e !== void 0 ? _e : undefined,
        responseFormat: formatAgentApiResponse(options.body.response_format),
    };
    if (agentId) {
        attributes.operationName = TracingOperationName.CREATE_UPDATE_AGENT;
        attributes.agentId = agentId;
    }
    TracingUtility.setSpanAttributes(span, TracingOperationName.CREATE_AGENT, UpdateWithAgentAttributes(attributes));
    addInstructionsEvent(span, options.body);
}
/**
 * Traces the end of creating an agent.
 * @param span - The span to trace.
 * @param _options - The options for creating an agent.
 * @param result - The result of creating an agent.
 */
export async function traceEndCreateOrUpdateAgent(span, _options, result) {
    const resolvedResult = await result;
    const attributes = {
        agentId: resolvedResult.id,
    };
    TracingUtility.updateSpanAttributes(span, attributes);
}
//# sourceMappingURL=assistantsTrace.js.map