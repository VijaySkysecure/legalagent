// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { createRestError } from "@azure-rest/core-client";
import { RestError } from "@azure/core-rest-pipeline";
export class OpenAIError extends RestError {
    constructor(message, OpenAIErrorOptions = {}) {
        super(message, OpenAIErrorOptions);
        this.param = OpenAIErrorOptions === null || OpenAIErrorOptions === void 0 ? void 0 : OpenAIErrorOptions.param;
        this.type = OpenAIErrorOptions === null || OpenAIErrorOptions === void 0 ? void 0 : OpenAIErrorOptions.type;
    }
}
export function createOpenAIError(response) {
    const internalError = response.body.error || response.body;
    let restError;
    if (typeof internalError === "string") {
        restError = createRestError(internalError, response);
    }
    else {
        restError = createRestError(response);
    }
    return new OpenAIError(restError.message, {
        statusCode: restError === null || restError === void 0 ? void 0 : restError.statusCode,
        code: restError === null || restError === void 0 ? void 0 : restError.code,
        request: restError === null || restError === void 0 ? void 0 : restError.request,
        response: restError === null || restError === void 0 ? void 0 : restError.response,
        param: internalError === null || internalError === void 0 ? void 0 : internalError.param,
        type: internalError === null || internalError === void 0 ? void 0 : internalError.type,
    });
}
//# sourceMappingURL=openAIError.js.map