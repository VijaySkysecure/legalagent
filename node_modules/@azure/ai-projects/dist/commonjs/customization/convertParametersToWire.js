"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertCreateVectorStoreFileBatchParam = convertCreateVectorStoreFileBatchParam;
exports.convertCreateVectorStoreFileParam = convertCreateVectorStoreFileParam;
exports.convertToListQueryParameters = convertToListQueryParameters;
exports.convertListVectorStoreFileBatchFilesQueryParamProperties = convertListVectorStoreFileBatchFilesQueryParamProperties;
exports.convertListFilesQueryParamProperties = convertListFilesQueryParamProperties;
const convertModelsToWrite_js_1 = require("./convertModelsToWrite.js");
function convertCreateVectorStoreFileBatchParam(input) {
    return {
        body: input.body && Object.assign(Object.assign(Object.assign({}, (input.body.fileIds && { file_ids: input.body.fileIds })), (input.body.dataSources && {
            data_sources: input.body.dataSources.map(convertModelsToWrite_js_1.convertVectorStoreDataSource),
        })), (input.body.chunkingStrategy && {
            chunking_strategy: (0, convertModelsToWrite_js_1.convertVectorStoreChunkingStrategyRequest)(input.body.chunkingStrategy),
        })),
    };
}
function convertCreateVectorStoreFileParam(input) {
    return {
        body: input.body && Object.assign(Object.assign(Object.assign({}, (input.body.fileId && { file_id: input.body.fileId })), (input.body.dataSources && {
            data_sources: input.body.dataSources.map(convertModelsToWrite_js_1.convertVectorStoreDataSource),
        })), (input.body.chunkingStrategy && {
            chunking_strategy: (0, convertModelsToWrite_js_1.convertVectorStoreChunkingStrategyRequest)(input.body.chunkingStrategy),
        })),
    };
}
function convertToListQueryParameters(options) {
    return Object.assign(Object.assign(Object.assign(Object.assign({}, (options.limit && { limit: options.limit })), (options.order && { order: options.order })), (options.after && { after: options.after })), (options.before && { before: options.before }));
}
function convertListVectorStoreFileBatchFilesQueryParamProperties(options) {
    return Object.assign(Object.assign({}, convertToListQueryParameters(options)), (options.filter && { filter: options.filter }));
}
function convertListFilesQueryParamProperties(options) {
    return Object.assign({}, (options.purpose && { purpose: options.purpose }));
}
//# sourceMappingURL=convertParametersToWire.js.map