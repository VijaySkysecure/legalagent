{"version":3,"file":"parameters.js","sourceRoot":"","sources":["../../../src/customization/parameters.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { RawHttpHeadersInput } from \"@azure/core-rest-pipeline\";\nimport type { RequestParameters } from \"@azure-rest/core-client\";\nimport type {\n  CreateAgentOptions,\n  ListSortOrder,\n  UpdateAgentOptions,\n  AgentThreadCreationOptions,\n  UpdateAgentThreadOptions,\n  ThreadMessageOptions,\n  CreateRunOptions,\n  ToolOutput,\n  CreateAndRunThreadOptions,\n  FilePurpose,\n  VectorStoreOptions,\n  VectorStoreUpdateOptions,\n  VectorStoreFileStatusFilter,\n  VectorStoreDataSource,\n  VectorStoreChunkingStrategyRequest,\n  ConnectionType,\n  Evaluation,\n  EvaluationSchedule,\n} from \"./models.js\";\n\nexport interface CreateAgentBodyParam {\n  body: CreateAgentOptions;\n}\n\nexport type CreateAgentParameters = CreateAgentBodyParam & RequestParameters;\n\nexport interface ListAgentsQueryParamProperties {\n  /** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. */\n  limit?: number;\n  /**\n   * Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order.\n   *\n   * Possible values: \"asc\", \"desc\"\n   */\n  order?: ListSortOrder;\n  /** A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. */\n  after?: string;\n  /** A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. */\n  before?: string;\n}\n\nexport interface ListAgentsQueryParam {\n  queryParameters?: ListAgentsQueryParamProperties;\n}\n\nexport type ListAgentsParameters = ListAgentsQueryParam & RequestParameters;\nexport type GetAgentParameters = RequestParameters;\n\nexport interface UpdateAgentBodyParam {\n  body: UpdateAgentOptions;\n}\n\nexport type UpdateAgentParameters = UpdateAgentBodyParam & RequestParameters;\nexport type DeleteAgentParameters = RequestParameters;\n\nexport interface CreateThreadBodyParam {\n  body: AgentThreadCreationOptions;\n}\n\nexport type CreateThreadParameters = CreateThreadBodyParam & RequestParameters;\nexport type GetThreadParameters = RequestParameters;\n\nexport interface UpdateThreadBodyParam {\n  body: UpdateAgentThreadOptions;\n}\n\nexport type UpdateThreadParameters = UpdateThreadBodyParam & RequestParameters;\nexport type DeleteThreadParameters = RequestParameters;\n\nexport interface CreateMessageBodyParam {\n  body: ThreadMessageOptions;\n}\n\nexport type CreateMessageParameters = CreateMessageBodyParam & RequestParameters;\n\nexport interface ListMessagesQueryParamProperties {\n  /** Filter messages by the run ID that generated them. */\n  runId?: string;\n  /** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. */\n  limit?: number;\n  /**\n   * Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order.\n   *\n   * Possible values: \"asc\", \"desc\"\n   */\n  order?: ListSortOrder;\n  /** A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. */\n  after?: string;\n  /** A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. */\n  before?: string;\n}\n\nexport interface ListMessagesQueryParam {\n  queryParameters?: ListMessagesQueryParamProperties;\n}\n\nexport type ListMessagesParameters = ListMessagesQueryParam & RequestParameters;\nexport type GetMessageParameters = RequestParameters;\n\nexport interface UpdateMessageBodyParam {\n  body: { metadata?: Record<string, string> | null };\n}\n\nexport type UpdateMessageParameters = UpdateMessageBodyParam & RequestParameters;\n\nexport interface CreateRunBodyParam {\n  body: CreateRunOptions;\n}\n\nexport type CreateRunParameters = CreateRunBodyParam & RequestParameters;\n\nexport interface ListRunsQueryParamProperties {\n  /** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. */\n  limit?: number;\n  /**\n   * Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order.\n   *\n   * Possible values: \"asc\", \"desc\"\n   */\n  order?: ListSortOrder;\n  /** A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. */\n  after?: string;\n  /** A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. */\n  before?: string;\n}\n\nexport interface ListRunsQueryParam {\n  queryParameters?: ListRunsQueryParamProperties;\n}\n\nexport type ListRunsParameters = ListRunsQueryParam & RequestParameters;\nexport type GetRunParameters = RequestParameters;\n\nexport interface UpdateRunBodyParam {\n  body: { metadata?: Record<string, string> | null };\n}\n\nexport type UpdateRunParameters = UpdateRunBodyParam & RequestParameters;\n\nexport interface SubmitToolOutputsToRunBodyParam {\n  body: { toolOutputs: Array<ToolOutput>; stream?: boolean | null };\n}\n\nexport type SubmitToolOutputsToRunParameters = SubmitToolOutputsToRunBodyParam & RequestParameters;\nexport type CancelRunParameters = RequestParameters;\n\nexport interface CreateThreadAndRunBodyParam {\n  body: CreateAndRunThreadOptions;\n}\n\nexport type CreateThreadAndRunParameters = CreateThreadAndRunBodyParam & RequestParameters;\nexport type GetRunStepParameters = RequestParameters;\n\nexport interface ListRunStepsQueryParamProperties {\n  /** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. */\n  limit?: number;\n  /**\n   * Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order.\n   *\n   * Possible values: \"asc\", \"desc\"\n   */\n  order?: ListSortOrder;\n  /** A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. */\n  after?: string;\n  /** A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. */\n  before?: string;\n}\n\nexport interface ListRunStepsQueryParam {\n  queryParameters?: ListRunStepsQueryParamProperties;\n}\n\nexport type ListRunStepsParameters = ListRunStepsQueryParam & RequestParameters;\n\nexport interface ListFilesQueryParamProperties {\n  /**\n   * The purpose of the file.\n   *\n   * Possible values: \"fine-tune\", \"fine-tune-results\", \"assistants\", \"assistants_output\", \"batch\", \"batch_output\", \"vision\"\n   */\n  purpose?: FilePurpose;\n}\n\nexport interface ListFilesQueryParam {\n  queryParameters?: ListFilesQueryParamProperties;\n}\n\nexport type ListFilesParameters = ListFilesQueryParam & RequestParameters;\n\nexport interface UploadFileBodyParam {\n  body:\n    | FormData\n    | Array<\n        | {\n            name: \"file\";\n            body: string | Uint8Array | ReadableStream<Uint8Array> | NodeJS.ReadableStream | File;\n            filename?: string;\n            contentType?: string;\n          }\n        | {\n            name: \"purpose\";\n            body: FilePurpose;\n            filename?: string;\n            contentType?: string;\n          }\n        | { name: \"filename\"; body: string }\n      >;\n}\n\nexport interface UploadFileMediaTypesParam {\n  /** The name of the file to upload. */\n  contentType: \"multipart/form-data\";\n}\n\nexport type UploadFileParameters = UploadFileMediaTypesParam &\n  UploadFileBodyParam &\n  RequestParameters;\nexport type DeleteFileParameters = RequestParameters;\nexport type GetFileParameters = RequestParameters;\nexport type GetFileContentParameters = RequestParameters;\n\nexport interface ListVectorStoresQueryParamProperties {\n  /** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. */\n  limit?: number;\n  /**\n   * Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order.\n   *\n   * Possible values: \"asc\", \"desc\"\n   */\n  order?: ListSortOrder;\n  /** A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. */\n  after?: string;\n  /** A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. */\n  before?: string;\n}\n\nexport interface ListVectorStoresQueryParam {\n  queryParameters?: ListVectorStoresQueryParamProperties;\n}\n\nexport type ListVectorStoresParameters = ListVectorStoresQueryParam & RequestParameters;\n\nexport interface CreateVectorStoreBodyParam {\n  body: VectorStoreOptions;\n}\n\nexport type CreateVectorStoreParameters = CreateVectorStoreBodyParam & RequestParameters;\nexport type GetVectorStoreParameters = RequestParameters;\n\nexport interface ModifyVectorStoreBodyParam {\n  body: VectorStoreUpdateOptions;\n}\n\nexport type ModifyVectorStoreParameters = ModifyVectorStoreBodyParam & RequestParameters;\nexport type DeleteVectorStoreParameters = RequestParameters;\n\nexport interface ListVectorStoreFilesQueryParamProperties {\n  /**\n   * Filter by file status.\n   *\n   * Possible values: \"in_progress\", \"completed\", \"failed\", \"cancelled\"\n   */\n  filter?: VectorStoreFileStatusFilter;\n  /** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. */\n  limit?: number;\n  /**\n   * Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order.\n   *\n   * Possible values: \"asc\", \"desc\"\n   */\n  order?: ListSortOrder;\n  /** A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. */\n  after?: string;\n  /** A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. */\n  before?: string;\n}\n\nexport interface ListVectorStoreFilesQueryParam {\n  queryParameters?: ListVectorStoreFilesQueryParamProperties;\n}\n\nexport type ListVectorStoreFilesParameters = ListVectorStoreFilesQueryParam & RequestParameters;\n\nexport interface CreateVectorStoreFileBodyParam {\n  body: {\n    fileId?: string;\n    dataSources?: Array<VectorStoreDataSource>;\n    chunkingStrategy?: VectorStoreChunkingStrategyRequest;\n  };\n}\n\nexport type CreateVectorStoreFileParameters = CreateVectorStoreFileBodyParam & RequestParameters;\nexport type GetVectorStoreFileParameters = RequestParameters;\nexport type DeleteVectorStoreFileParameters = RequestParameters;\n\nexport interface CreateVectorStoreFileBatchBodyParam {\n  body: {\n    fileIds?: string[];\n    dataSources?: Array<VectorStoreDataSource>;\n    chunkingStrategy?: VectorStoreChunkingStrategyRequest;\n  };\n}\n\nexport type CreateVectorStoreFileBatchParameters = CreateVectorStoreFileBatchBodyParam &\n  RequestParameters;\nexport type GetVectorStoreFileBatchParameters = RequestParameters;\nexport type CancelVectorStoreFileBatchParameters = RequestParameters;\n\nexport interface ListVectorStoreFileBatchFilesQueryParamProperties {\n  /**\n   * Filter by file status.\n   *\n   * Possible values: \"in_progress\", \"completed\", \"failed\", \"cancelled\"\n   */\n  filter?: VectorStoreFileStatusFilter;\n  /** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. */\n  limit?: number;\n  /**\n   * Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order.\n   *\n   * Possible values: \"asc\", \"desc\"\n   */\n  order?: ListSortOrder;\n  /** A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. */\n  after?: string;\n  /** A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. */\n  before?: string;\n}\n\nexport interface ListVectorStoreFileBatchFilesQueryParam {\n  queryParameters?: ListVectorStoreFileBatchFilesQueryParamProperties;\n}\n\nexport type ListVectorStoreFileBatchFilesParameters = ListVectorStoreFileBatchFilesQueryParam &\n  RequestParameters;\nexport type GetWorkspaceParameters = RequestParameters;\n\nexport interface ListConnectionsQueryParamProperties {\n  /** Category of the workspace connection. */\n  category?: ConnectionType;\n  /** Indicates whether to list datastores. Service default: do not list datastores. */\n  includeAll?: boolean;\n  /** Target of the workspace connection. */\n  target?: string;\n}\n\nexport interface ListConnectionsQueryParam {\n  queryParameters?: ListConnectionsQueryParamProperties;\n}\n\nexport type ListConnectionsParameters = ListConnectionsQueryParam & RequestParameters;\nexport type GetConnectionParameters = RequestParameters;\n\nexport interface GetConnectionWithSecretsBodyParam {\n  body: { ignored: string };\n}\n\nexport type GetConnectionWithSecretsParameters = GetConnectionWithSecretsBodyParam &\n  RequestParameters;\nexport type GetAppInsightsParameters = RequestParameters;\n\nexport interface GetHeaders {\n  /** An opaque, globally-unique, client-generated string identifier for the request. */\n  \"x-ms-client-request-id\"?: string;\n}\n\nexport interface GetHeaderParam {\n  headers?: RawHttpHeadersInput & GetHeaders;\n}\n\nexport type GetParameters = GetHeaderParam & RequestParameters;\n\nexport interface CreateBodyParam {\n  /** Evaluation to run. */\n  body: Evaluation;\n}\n\nexport type CreateParameters = CreateBodyParam & RequestParameters;\n\nexport interface ListHeaders {\n  /** An opaque, globally-unique, client-generated string identifier for the request. */\n  \"x-ms-client-request-id\"?: string;\n}\n\nexport interface ListQueryParamProperties {\n  /** The number of result items to return. */\n  top?: number;\n  /** The number of result items to skip. */\n  skip?: number;\n  /** The maximum number of result items per page. */\n  maxpagesize?: number;\n}\n\nexport interface ListQueryParam {\n  queryParameters?: ListQueryParamProperties;\n}\n\nexport interface ListHeaderParam {\n  headers?: RawHttpHeadersInput & ListHeaders;\n}\n\nexport type ListParameters = ListQueryParam & ListHeaderParam & RequestParameters;\n\nexport interface UpdateHeaders {\n  /** An opaque, globally-unique, client-generated string identifier for the request. */\n  \"x-ms-client-request-id\"?: string;\n}\n\n/** The resource instance. */\nexport type EvaluationResourceMergeAndPatch = Partial<Evaluation>;\n\nexport interface UpdateBodyParam {\n  /** The resource instance. */\n  body: EvaluationResourceMergeAndPatch;\n}\n\nexport interface UpdateHeaderParam {\n  headers?: RawHttpHeadersInput & UpdateHeaders;\n}\n\nexport interface UpdateMediaTypesParam {\n  /** This request has a JSON Merge Patch body. */\n  contentType: \"application/merge-patch+json\";\n}\n\nexport type UpdateParameters = UpdateHeaderParam &\n  UpdateMediaTypesParam &\n  UpdateBodyParam &\n  RequestParameters;\n\nexport interface GetScheduleHeaders {\n  /** An opaque, globally-unique, client-generated string identifier for the request. */\n  \"x-ms-client-request-id\"?: string;\n}\n\nexport interface GetScheduleHeaderParam {\n  headers?: RawHttpHeadersInput & GetScheduleHeaders;\n}\n\nexport type GetScheduleParameters = GetScheduleHeaderParam & RequestParameters;\n\nexport interface CreateOrReplaceScheduleHeaders {\n  /** An opaque, globally-unique, client-generated string identifier for the request. */\n  \"x-ms-client-request-id\"?: string;\n}\n\nexport interface CreateOrReplaceScheduleBodyParam {\n  /** The resource instance. */\n  body: EvaluationSchedule;\n}\n\nexport interface CreateOrReplaceScheduleHeaderParam {\n  headers?: RawHttpHeadersInput & CreateOrReplaceScheduleHeaders;\n}\n\nexport type CreateOrReplaceScheduleParameters = CreateOrReplaceScheduleHeaderParam &\n  CreateOrReplaceScheduleBodyParam &\n  RequestParameters;\n\nexport interface ListScheduleHeaders {\n  /** An opaque, globally-unique, client-generated string identifier for the request. */\n  \"x-ms-client-request-id\"?: string;\n}\n\nexport interface ListScheduleQueryParamProperties {\n  /** The number of result items to return. */\n  top?: number;\n  /** The number of result items to skip. */\n  skip?: number;\n  /** The maximum number of result items per page. */\n  maxpagesize?: number;\n}\n\nexport interface ListScheduleQueryParam {\n  queryParameters?: ListScheduleQueryParamProperties;\n}\n\nexport interface ListScheduleHeaderParam {\n  headers?: RawHttpHeadersInput & ListScheduleHeaders;\n}\n\nexport type ListScheduleParameters = ListScheduleQueryParam &\n  ListScheduleHeaderParam &\n  RequestParameters;\nexport type DisableScheduleParameters = RequestParameters;\n"]}