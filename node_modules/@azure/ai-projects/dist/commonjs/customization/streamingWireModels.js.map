{"version":3,"file":"streamingWireModels.js","sourceRoot":"","sources":["../../../src/customization/streamingWireModels.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { MessageRole } from \"../generated/src/models.js\";\nimport type { RunStepFileSearchToolCallResultsOutput } from \"../generated/src/outputModels.js\";\n\n/** Represents a message delta i.e. any changed fields on a message during streaming. */\nexport interface MessageDeltaChunk {\n  /** The identifier of the message, which can be referenced in API endpoints. */\n  id: string;\n\n  /** The object type, which is always `thread.message.delta`. */\n  object: \"thread.message.delta\";\n\n  /** The delta containing the fields that have changed on the Message. */\n  delta: MessageDelta;\n}\n\n/** Represents the typed 'delta' payload within a streaming message delta chunk. */\nexport interface MessageDelta {\n  /** The entity that produced the message. */\n  role: MessageRole;\n\n  /** The content of the message as an array of text and/or images. */\n  content: Array<MessageDeltaContent>;\n}\n\nexport type MessageDeltaContent =\n  | MessageDeltaContentParent\n  | MessageDeltaTextContent\n  | MessageDeltaImageFileContent;\n\n/** The abstract base representation of a partial streamed message content payload. */\nexport interface MessageDeltaContentParent {\n  /** The index of the content part of the message. */\n  index: number;\n\n  /** The type of content for this content part. */\n  type: string;\n}\n/** Represents a streamed image file content part within a streaming message delta chunk. */\nexport interface MessageDeltaImageFileContent extends MessageDeltaContentParent {\n  /** The type of content for this content part, which is always \"image_file.\" */\n  type: \"image_file\";\n\n  /** The image_file data. */\n  image_file?: MessageDeltaImageFileContentObject;\n}\n\n/** Represents the 'image_file' payload within streaming image file content. */\nexport interface MessageDeltaImageFileContentObject {\n  /** The file ID of the image in the message content. */\n  file_id?: string;\n}\n\n/** Represents a streamed text content part within a streaming message delta chunk. */\nexport interface MessageDeltaTextContent extends MessageDeltaContentParent {\n  /** The type of content for this content part, which is always \"text.\" */\n  type: \"text\";\n\n  /** The text content details. */\n  text?: MessageDeltaTextContentObject;\n}\n\n/** Represents the data of a streamed text content part within a streaming message delta chunk. */\nexport interface MessageDeltaTextContentObject {\n  /** The data that makes up the text. */\n  value?: string;\n\n  /** Annotations for the text. */\n  annotations?: Array<MessageDeltaTextAnnotation>;\n}\n\nexport type MessageDeltaTextAnnotation =\n  | MessageDeltaTextAnnotationParent\n  | MessageDeltaTextFileCitationAnnotation\n  | MessageDeltaTextFilePathAnnotation;\n\n/** The abstract base representation of a streamed text content part's text annotation. */\nexport interface MessageDeltaTextAnnotationParent {\n  /** The index of the annotation within a text content part. */\n  index: number;\n\n  /** The type of the text content annotation. */\n  type: string;\n}\n\n/** Represents a streamed file citation applied to a streaming text content part. */\nexport interface MessageDeltaTextFileCitationAnnotation extends MessageDeltaTextAnnotationParent {\n  /** The type of the text content annotation, which is always \"file_citation.\" */\n  type: \"file_citation\";\n\n  /** The file citation information. */\n  file_citation?: MessageDeltaTextFileCitationAnnotationObject;\n\n  /** The text in the message content that needs to be replaced */\n  text?: string;\n\n  /** The start index of this annotation in the content text. */\n  start_index?: number;\n\n  /** The end index of this annotation in the content text. */\n  end_index?: number;\n}\n\n/** Represents the data of a streamed file citation as applied to a streaming text content part. */\nexport interface MessageDeltaTextFileCitationAnnotationObject {\n  /** The ID of the specific file the citation is from. */\n  file_id?: string;\n\n  /** The specific quote in the cited file. */\n  quote?: string;\n}\n\n/** Represents a streamed file path annotation applied to a streaming text content part. */\nexport interface MessageDeltaTextFilePathAnnotation extends MessageDeltaTextAnnotationParent {\n  /** The type of the text content annotation, which is always \"file_path.\" */\n  type: \"file_path\";\n\n  /** The file path information. */\n  file_path?: MessageDeltaTextFilePathAnnotationObject;\n\n  /** The start index of this annotation in the content text. */\n  start_index?: number;\n\n  /** The end index of this annotation in the content text. */\n  end_index?: number;\n\n  /** The text in the message content that needs to be replaced */\n  text?: string;\n}\n\n/** Represents the data of a streamed file path annotation as applied to a streaming text content part. */\nexport interface MessageDeltaTextFilePathAnnotationObject {\n  /** The file ID for the annotation. */\n  file_id?: string;\n}\n\n/** A representation of the URL used for the text citation. */\nexport interface MessageDeltaTextUrlCitationDetails {\n  /** The URL where the citation is from. */\n  url?: string;\n\n  /** The title of the URL. */\n  title?: string;\n}\n\n/** Represents a run step delta i.e. any changed fields on a run step during streaming. */\nexport interface RunStepDeltaChunk {\n  /** The identifier of the run step, which can be referenced in API endpoints. */\n  id: string;\n\n  /** The object type, which is always `thread.run.step.delta`. */\n  object: \"thread.run.step.delta\";\n\n  /** The delta containing the fields that have changed on the run step. */\n  delta: RunStepDelta;\n}\n\n/** Represents the delta payload in a streaming run step delta chunk. */\nexport interface RunStepDelta {\n  /** The details of the run step. */\n  step_details?: RunStepDeltaDetail;\n}\n\n/** Represents a single run step detail item in a streaming run step's delta payload. */\nexport interface RunStepDeltaDetail {\n  /** The object type for the run step detail object. */\n  type: string;\n}\n\n/** Represents a message creation within a streaming run step delta. */\nexport interface RunStepDeltaMessageCreation extends RunStepDeltaDetail {\n  /** The object type, which is always \"message_creation.\" */\n  type: \"message_creation\";\n\n  /** The message creation data. */\n  message_creation?: RunStepDeltaMessageCreationObject;\n}\n\n/** Represents the data within a streaming run step message creation response object. */\nexport interface RunStepDeltaMessageCreationObject {\n  /** The ID of the newly-created message. */\n  message_id?: string;\n}\n\n/** Represents an invocation of tool calls as part of a streaming run step. */\nexport interface RunStepDeltaToolCallObject extends RunStepDeltaDetail {\n  /** The object type, which is always \"tool_calls.\" */\n  type: \"tool_calls\";\n\n  /** The collection of tool calls for the tool call detail item. */\n  tool_calls?: Array<RunStepDeltaToolCall>;\n}\n\nexport type RunStepDeltaToolCall =\n  | RunStepDeltaToolCallParent\n  | RunStepDeltaFunctionToolCall\n  | RunStepDeltaFileSearchToolCall\n  | RunStepDeltaCodeInterpreterToolCall;\n\n/** The abstract base representation of a single tool call within a streaming run step's delta tool call details. */\nexport interface RunStepDeltaToolCallParent {\n  /** The index of the tool call detail in the run step's tool_calls array. */\n  index: number;\n\n  /** The ID of the tool call, used when submitting outputs to the run. */\n  id: string;\n\n  /** The type of the tool call detail item in a streaming run step's details. */\n  type: string;\n}\n\n/** Represents a function tool call within a streaming run step's tool call details. */\nexport interface RunStepDeltaFunctionToolCall extends RunStepDeltaToolCallParent {\n  /** The object type, which is always \"function.\" */\n  type: \"function\";\n\n  /** The function data for the tool call. */\n  function?: RunStepDeltaFunction;\n}\n\n/** Represents a file search tool call within a streaming run step's tool call details. */\nexport interface RunStepDeltaFileSearchToolCall extends RunStepDeltaToolCallParent {\n  /** The object type, which is always \"file_search.\" */\n  type: \"file_search\";\n\n  /** Reserved for future use. */\n  file_search?: RunStepFileSearchToolCallResultsOutput;\n}\n\n/** Represents a Code Interpreter tool call within a streaming run step's tool call details. */\nexport interface RunStepDeltaCodeInterpreterToolCall extends RunStepDeltaToolCallParent {\n  /** The object type, which is always \"code_interpreter.\" */\n  type: \"code_interpreter\";\n\n  /** The Code Interpreter data for the tool call. */\n  code_interpreter?: RunStepDeltaCodeInterpreterDetailItemObject;\n}\n\n/** Represents the function data in a streaming run step delta's function tool call. */\nexport interface RunStepDeltaFunction {\n  /** The name of the function. */\n  name?: string;\n\n  /** The arguments passed to the function as input. */\n  arguments?: string;\n\n  /** The output of the function, null if outputs have not yet been submitted. */\n  output?: string | null;\n}\n\nexport type RunStepDeltaCodeInterpreterOutput =\n  | RunStepDeltaCodeInterpreterOutputParent\n  | RunStepDeltaCodeInterpreterLogOutput\n  | RunStepDeltaCodeInterpreterImageOutput;\n\n/** Represents the Code Interpreter tool call data in a streaming run step's tool calls. */\nexport interface RunStepDeltaCodeInterpreterDetailItemObject {\n  /** The input into the Code Interpreter tool call. */\n  input?: string;\n\n  /**\n   * The outputs from the Code Interpreter tool call. Code Interpreter can output one or more\n   * items, including text (`logs`) or images (`image`). Each of these are represented by a\n   * different object type.\n   */\n  outputs?: Array<RunStepDeltaCodeInterpreterOutput>;\n}\n\n/** The abstract base representation of a streaming run step tool call's Code Interpreter tool output. */\nexport interface RunStepDeltaCodeInterpreterOutputParent {\n  /** The index of the output in the streaming run step tool call's Code Interpreter outputs array. */\n  index: number;\n\n  /** The type of the streaming run step tool call's Code Interpreter output. */\n  type: string;\n}\n\n/** Represents a log output as produced by the Code Interpreter tool and as represented in a streaming run step's delta tool calls collection. */\nexport interface RunStepDeltaCodeInterpreterLogOutput\n  extends RunStepDeltaCodeInterpreterOutputParent {\n  /** The type of the object, which is always \"logs.\" */\n  type: \"logs\";\n\n  /** The text output from the Code Interpreter tool call. */\n  logs?: string;\n}\n\n/** Represents an image output as produced the Code interpreter tool and as represented in a streaming run step's delta tool calls collection. */\nexport interface RunStepDeltaCodeInterpreterImageOutput\n  extends RunStepDeltaCodeInterpreterOutputParent {\n  /** The object type, which is always \"image.\" */\n  type: \"image\";\n\n  /** The image data for the Code Interpreter tool call output. */\n  image?: RunStepDeltaCodeInterpreterImageOutputObject;\n}\n\n/** Represents the data for a streaming run step's Code Interpreter tool call image output. */\nexport interface RunStepDeltaCodeInterpreterImageOutputObject {\n  /** The file ID for the image. */\n  file_id?: string;\n}\n"]}