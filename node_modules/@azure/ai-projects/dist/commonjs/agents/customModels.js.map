{"version":3,"file":"customModels.js","sourceRoot":"","sources":["../../../src/agents/customModels.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { OperationOptions, RequestParameters } from \"@azure-rest/core-client\";\nimport type { ThreadRunOutput } from \"../customization/outputModels.js\";\nimport type { AgentEventMessageStream } from \"./streamingModels.js\";\nimport type {\n  AgentThreadCreationOptions,\n  CreateAgentOptions,\n  CreateAndRunThreadOptions,\n  CreateRunOptions,\n  UpdateAgentOptions,\n  UpdateAgentThreadOptions,\n  VectorStoreFileStatusFilter,\n  VectorStoreOptions,\n  VectorStoreUpdateOptions,\n} from \"../customization/models.js\";\nimport type {\n  ListMessagesQueryParamProperties,\n  ListFilesQueryParamProperties,\n} from \"../customization/parameters.js\";\nimport type {\n  CreateVectorStoreFileBatchOptions,\n  CreateVectorStoreFileOptions,\n} from \"./vectorStoresModels.js\";\n\n/**\n * Optional request parameters support passing headers, abort signal, etc.\n */\nexport type OptionalRequestParameters = Pick<\n  RequestParameters,\n  \"headers\" | \"timeout\" | \"abortSignal\" | \"tracingOptions\"\n>;\n\n/**\n * Request options for list requests.\n */\nexport interface ListQueryParameters {\n  /**\n   * A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.\n   */\n  limit?: number;\n\n  /**\n   * Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order.\n   */\n  order?: \"asc\" | \"desc\";\n\n  /**\n   * A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list.\n   */\n  after?: string;\n\n  /**\n   * A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list.\n   */\n  before?: string;\n}\n\n/**\n * Options for configuring polling behavior.\n */\nexport interface PollingOptions {\n  /**\n   * The interval, in milliseconds, to wait between polling attempts. If not specified, a default interval of 1000ms will be used.\n   */\n  sleepIntervalInMs?: number;\n}\n\n/**\n * Optional parameters configuring polling behavior.\n */\nexport interface PollingOptionsParams {\n  /** Options for configuring polling behavior. */\n  pollingOptions?: PollingOptions;\n}\n\n/**\n * Agent run response with support to stream.\n */\nexport type AgentRunResponse = PromiseLike<ThreadRunOutput> & {\n  /**\n   * Function to start streaming the agent event messages.\n   * @returns A promise that resolves to an AgentEventMessageStream.\n   */\n  stream: () => Promise<AgentEventMessageStream>;\n};\n\n/**\n * Optional parameters for creating and running a thread, excluding the assistantId.\n */\nexport type CreateRunOptionalParams = Omit<CreateRunOptions & OperationOptions, \"assistantId\"> &\n  OperationOptions;\n\n/**\n * Optional parameters for creating and running a thread, excluding the assistantId.\n */\nexport type CreateAndRunThreadOptionalParams = Omit<CreateAndRunThreadOptions, \"assistantId\"> &\n  OperationOptions;\n\n/**\n * Optional parameters for listing run queries.\n */\nexport interface ListRunQueryOptionalParams extends ListQueryParameters, OperationOptions {}\n\n/**\n * Optional parameters for getting a run.\n */\nexport interface GetRunOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for canceling a run.\n */\nexport interface CancelRunOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for submitting tool outputs to a run.\n */\nexport interface SubmitToolOutputsToRunOptionalParams extends OperationOptions {\n  /**\n   * Whether to stream the tool outputs.\n   */\n  stream?: boolean;\n}\n\n/**\n * Optional parameters for updating a run.\n */\nexport interface UpdateRunOptionalParams extends OperationOptions {\n  /**  Metadata to update in the run.  */\n  metadata?: Record<string, string> | null;\n}\n\n/**\n * Optional parameters for creating an agent thread.\n */\nexport interface CreateAgentThreadOptionalParams\n  extends AgentThreadCreationOptions,\n    OperationOptions {}\n\n/**\n * Optional parameters for getting an agent thread.\n */\nexport interface GetAgentThreadOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for updating an agent thread.\n */\nexport interface UpdateAgentThreadOptionalParams\n  extends UpdateAgentThreadOptions,\n    OperationOptions {}\n\n/**\n * Optional parameters for deleting an agent thread.\n */\nexport interface DeleteAgentThreadOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for getting an run step.\n */\nexport interface GetRunStepOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for listing run steps.\n */\nexport interface ListRunStepsOptionalParams extends ListQueryParameters, OperationOptions {}\n\n/**\n * Optional parameters for creating a message.\n */\nexport interface CreateMessageOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for updating a message.\n */\nexport interface UpdateMessageOptionalParams extends OperationOptions {\n  /** Metadata to update in the message. */\n  metadata?: Record<string, string> | null;\n}\n\n/**\n * Optional parameters for listing messages.\n */\nexport interface ListMessagesOptionalParams\n  extends ListMessagesQueryParamProperties,\n    OperationOptions {}\n\n/**\n * Optional parameters creating vector store.\n */\nexport interface CreateVectorStoreOptionalParams\n  extends VectorStoreOptions,\n    OperationOptions,\n    PollingOptionsParams {}\n\n/**\n * Optional parameters for listing vector stores.\n */\nexport interface ListVectorStoresOptionalParams extends ListQueryParameters, OperationOptions {}\n\n/**\n * Optional parameters for updating a vector store.\n */\nexport interface UpdateVectorStoreOptionalParams\n  extends VectorStoreUpdateOptions,\n    OperationOptions {}\n\n/**\n * Optional parameters for deleting a vector store.\n */\nexport interface DeleteVectorStoreOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for getting a vector store.\n */\nexport interface GetVectorStoreOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for listing vector store files.\n */\nexport interface ListVectorStoreFilesOptionalParams extends ListQueryParameters, OperationOptions {}\n\n/**\n * Optional parameters for creating a vector store file.\n */\nexport interface CreateVectorStoreFileOptionalParams\n  extends CreateVectorStoreFileOptions,\n    OperationOptions,\n    PollingOptionsParams {}\n\n/**\n * Optional parameters for getting a vector store file.\n */\nexport interface GetVectorStoreFileOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for deleting a vector store file.\n */\nexport interface DeleteVectorStoreFileOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for listing vector store file batches.\n */\nexport interface ListVectorStoreFileBatchFilesOptionalParams\n  extends ListQueryParameters,\n    OperationOptions {\n  /** Filter by file status. */\n  filter?: VectorStoreFileStatusFilter;\n}\n\n/**\n * Optional parameters for getting a vector store file batch.\n */\nexport interface GetVectorStoreFileBatchOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for canceling a vector store file batch.\n */\nexport interface CancelVectorStoreFileBatchOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for creating a vector store file batch.\n */\nexport interface CreateVectorStoreFileBatchOptionalParams\n  extends CreateVectorStoreFileBatchOptions,\n    OperationOptions,\n    PollingOptionsParams {}\n\n/**\n * Optional parameters for creating agent.\n */\nexport interface CreateAgentOptionalParams\n  extends Omit<CreateAgentOptions, \"model\">,\n    OperationOptions {}\n\n/**\n * Optional parameters for updating agent.\n */\nexport interface UpdateAgentOptionalParams extends UpdateAgentOptions, OperationOptions {}\n\n/**\n * Optional parameters for deleting agent.\n */\nexport interface DeleteAgentOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for getting agent.\n */\nexport interface GetAgentOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for listing agents.\n */\nexport interface ListAgentsOptionalParams extends ListQueryParameters, OperationOptions {}\n\n/**\n * Optional parameters for listing files.\n */\nexport interface ListFilesOptionalParams extends ListFilesQueryParamProperties, OperationOptions {}\n\n/**\n * Optional parameters for deleting a file.\n */\nexport interface DeleteFileOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for getting a file.\n */\nexport interface GetFileOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for getting file content.\n */\nexport interface GetFileContentOptionalParams extends OperationOptions {}\n\n/**\n * Optional parameters for uploading a file.\n */\nexport interface UploadFileOptionalParams extends OperationOptions, PollingOptionsParams {\n  /** The name of the file. */\n  fileName?: string;\n}\n"]}