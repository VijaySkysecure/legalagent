{"version":3,"file":"runTrace.js","sourceRoot":"","sources":["../../../src/agents/runTrace.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  CreateRunParameters,\n  CreateThreadAndRunParameters,\n  SubmitToolOutputsToRunParameters,\n  UpdateRunParameters,\n} from \"../generated/src/parameters.js\";\nimport type { ThreadRunOutput } from \"../generated/src/outputModels.js\";\nimport type { TracingAttributeOptions, Span } from \"../tracing.js\";\nimport { TracingUtility, TracingOperationName } from \"../tracing.js\";\nimport {\n  addInstructionsEvent,\n  addMessageEvent,\n  addToolMessagesEvent,\n  formatAgentApiResponse,\n  UpdateWithAgentAttributes,\n} from \"./traceUtility.js\";\n\nexport function traceStartCreateRun(\n  span: Span,\n  options: CreateRunParameters | CreateThreadAndRunParameters,\n  threadId?: string,\n  operationName: string = TracingOperationName.CREATE_RUN,\n): void {\n  const attributes: TracingAttributeOptions = {\n    threadId: threadId,\n    agentId: options.body.assistant_id,\n    model: options.body.model ?? undefined,\n    instructions: options.body.instructions ?? undefined,\n    temperature: options.body.temperature ?? undefined,\n    topP: options.body.top_p ?? undefined,\n    maxCompletionTokens: options.body.max_completion_tokens ?? undefined,\n    maxPromptTokens: options.body.max_prompt_tokens ?? undefined,\n    responseFormat: formatAgentApiResponse(options.body.response_format),\n  };\n  if ((options as CreateRunParameters).body.additional_instructions) {\n    attributes.additional_instructions =\n      (options as CreateRunParameters).body.additional_instructions ?? undefined;\n  }\n  TracingUtility.setSpanAttributes(span, operationName, UpdateWithAgentAttributes(attributes));\n  setSpanEvents(span, options);\n}\n\nexport function traceStartCreateThreadAndRun(\n  span: Span,\n  options: CreateThreadAndRunParameters,\n): void {\n  traceStartCreateRun(span, options, undefined, TracingOperationName.CREATE_THREAD_RUN);\n}\n\nexport async function traceEndCreateOrUpdateRun(\n  span: Span,\n  _options: CreateRunParameters | UpdateRunParameters,\n  result: Promise<ThreadRunOutput>,\n): Promise<void> {\n  const resolvedResult = await result;\n  updateSpanAttributesForRun(span, resolvedResult);\n}\n\nexport function traceStartSubmitToolOutputsToRun(\n  span: Span,\n  options: SubmitToolOutputsToRunParameters,\n  threadId: string,\n  runId: string,\n): void {\n  const attributes: TracingAttributeOptions = { threadId: threadId, runId: runId };\n  TracingUtility.setSpanAttributes(\n    span,\n    TracingOperationName.SUBMIT_TOOL_OUTPUTS,\n    UpdateWithAgentAttributes(attributes),\n  );\n  addToolMessagesEvent(span, options.body.tool_outputs);\n}\n\nexport async function traceEndSubmitToolOutputsToRun(\n  span: Span,\n  _options: SubmitToolOutputsToRunParameters,\n  result: Promise<ThreadRunOutput>,\n): Promise<void> {\n  const resolvedResult = await result;\n  updateSpanAttributesForRun(span, resolvedResult);\n}\n\nfunction updateSpanAttributesForRun(span: Span, output: ThreadRunOutput): void {\n  TracingUtility.updateSpanAttributes(span, {\n    runId: output.id,\n    runStatus: output.status,\n    responseModel: output.model,\n  });\n  const usage = output.usage;\n  if (usage && \"completion_tokens\" in usage && usage.completion_tokens) {\n    TracingUtility.updateSpanAttributes(span, {\n      usageCompletionTokens: usage.completion_tokens,\n      usagePromptTokens: usage.prompt_tokens,\n    });\n  }\n}\n\nfunction setSpanEvents(span: Span, options: CreateRunParameters): void {\n  addInstructionsEvent(span, { ...options.body, agentId: options.body.assistant_id });\n  options.body.additional_messages?.forEach((message) => {\n    addMessageEvent(span, message);\n  });\n}\n"]}