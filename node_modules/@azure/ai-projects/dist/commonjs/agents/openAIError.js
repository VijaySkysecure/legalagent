"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.OpenAIError = void 0;
exports.createOpenAIError = createOpenAIError;
const core_client_1 = require("@azure-rest/core-client");
const core_rest_pipeline_1 = require("@azure/core-rest-pipeline");
class OpenAIError extends core_rest_pipeline_1.RestError {
    constructor(message, OpenAIErrorOptions = {}) {
        super(message, OpenAIErrorOptions);
        this.param = OpenAIErrorOptions === null || OpenAIErrorOptions === void 0 ? void 0 : OpenAIErrorOptions.param;
        this.type = OpenAIErrorOptions === null || OpenAIErrorOptions === void 0 ? void 0 : OpenAIErrorOptions.type;
    }
}
exports.OpenAIError = OpenAIError;
function createOpenAIError(response) {
    const internalError = response.body.error || response.body;
    let restError;
    if (typeof internalError === "string") {
        restError = (0, core_client_1.createRestError)(internalError, response);
    }
    else {
        restError = (0, core_client_1.createRestError)(response);
    }
    return new OpenAIError(restError.message, {
        statusCode: restError === null || restError === void 0 ? void 0 : restError.statusCode,
        code: restError === null || restError === void 0 ? void 0 : restError.code,
        request: restError === null || restError === void 0 ? void 0 : restError.request,
        response: restError === null || restError === void 0 ? void 0 : restError.response,
        param: internalError === null || internalError === void 0 ? void 0 : internalError.param,
        type: internalError === null || internalError === void 0 ? void 0 : internalError.type,
    });
}
//# sourceMappingURL=openAIError.js.map