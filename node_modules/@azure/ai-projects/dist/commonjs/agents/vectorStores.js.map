{"version":3,"file":"vectorStores.js","sourceRoot":"","sources":["../../../src/agents/vectorStores.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { Client } from \"@azure-rest/core-client\";\nimport { operationOptionsToRequestParameters } from \"@azure-rest/core-client\";\nimport type {\n  ListVectorStoresParameters,\n  CreateVectorStoreParameters,\n  ModifyVectorStoreParameters,\n} from \"../generated/src/parameters.js\";\nimport type {\n  OpenAIPageableListOfVectorStoreOutput,\n  VectorStoreDeletionStatusOutput,\n  VectorStoreOutput,\n} from \"../customization/outputModels.js\";\nimport { createPoller } from \"./poller.js\";\nimport {\n  type CreateVectorStoreOptionalParams,\n  type DeleteVectorStoreOptionalParams,\n  type GetVectorStoreOptionalParams,\n  type ListVectorStoresOptionalParams,\n  type UpdateVectorStoreOptionalParams,\n} from \"./customModels.js\";\nimport {\n  validateLimit,\n  validateMetadata,\n  validateOrder,\n  validateVectorStoreId,\n} from \"./inputValidations.js\";\nimport type * as GeneratedParameters from \"../generated/src/parameters.js\";\nimport * as ConvertFromWire from \"../customization/convertOutputModelsFromWire.js\";\nimport * as ConvertToWire from \"../customization/convertModelsToWrite.js\";\nimport { convertToListQueryParameters } from \"../customization/convertParametersToWire.js\";\nimport { createOpenAIError } from \"./openAIError.js\";\nimport type { OperationState, OperationStatus, PollerLike } from \"@azure/core-lro\";\n\nconst expectedStatuses = [\"200\"];\n\n/** Returns a list of vector stores. */\nexport async function listVectorStores(\n  context: Client,\n  options: ListVectorStoresOptionalParams = {},\n): Promise<OpenAIPageableListOfVectorStoreOutput> {\n  const listOptions: GeneratedParameters.ListVectorStoresParameters = {\n    ...operationOptionsToRequestParameters(options),\n    queryParameters: convertToListQueryParameters(options),\n  };\n\n  validateListVectorStoresParameters(listOptions);\n  const result = await context.path(\"/vector_stores\").get(listOptions);\n\n  if (!expectedStatuses.includes(result.status)) {\n    throw createOpenAIError(result);\n  }\n  return ConvertFromWire.convertOpenAIPageableListOfVectorStoreOutput(result.body);\n}\n\n/** Creates a vector store. */\nexport function createVectorStore(\n  context: Client,\n  options: CreateVectorStoreOptionalParams = {},\n): PollerLike<OperationState<VectorStoreOutput>, VectorStoreOutput> {\n  return createPoller<VectorStoreOutput>({\n    initOperation: async () => {\n      return createVectorStoreInternal(context, options);\n    },\n    pollOperation: async (currentResult: VectorStoreOutput) => {\n      return getVectorStore(context, currentResult.id, options);\n    },\n    getOperationStatus: getLroOperationStatus,\n    intervalInMs: options.pollingOptions?.sleepIntervalInMs,\n  });\n}\n\n/** Returns the vector store object matching the specified ID. */\nexport async function getVectorStore(\n  context: Client,\n  vectorStoreId: string,\n  options: GetVectorStoreOptionalParams = {},\n): Promise<VectorStoreOutput> {\n  const getOptions: GeneratedParameters.GetVectorStoreParameters = {\n    ...operationOptionsToRequestParameters(options),\n  };\n\n  validateVectorStoreId(vectorStoreId);\n  const result = await context\n    .path(\"/vector_stores/{vectorStoreId}\", vectorStoreId)\n    .get(getOptions);\n\n  if (!expectedStatuses.includes(result.status)) {\n    throw createOpenAIError(result);\n  }\n  return ConvertFromWire.convertVectorStoreOutput(result.body);\n}\n\n/** The ID of the vector store to modify. */\nexport async function modifyVectorStore(\n  context: Client,\n  vectorStoreId: string,\n  options: UpdateVectorStoreOptionalParams = {},\n): Promise<VectorStoreOutput> {\n  const modifyOptions: GeneratedParameters.ModifyVectorStoreParameters = {\n    ...operationOptionsToRequestParameters(options),\n    body: ConvertToWire.convertVectorStoreUpdateOptions(options),\n  };\n\n  validateVectorStoreId(vectorStoreId);\n  validateModifyVectorStoreParameters(modifyOptions);\n  const result = await context\n    .path(\"/vector_stores/{vectorStoreId}\", vectorStoreId)\n    .post(modifyOptions);\n\n  if (!expectedStatuses.includes(result.status)) {\n    throw createOpenAIError(result);\n  }\n  return ConvertFromWire.convertVectorStoreOutput(result.body);\n}\n\n/** Deletes the vector store object matching the specified ID. */\nexport async function deleteVectorStore(\n  context: Client,\n  vectorStoreId: string,\n  options: DeleteVectorStoreOptionalParams = {},\n): Promise<VectorStoreDeletionStatusOutput> {\n  const deleteOptions: GeneratedParameters.DeleteVectorStoreParameters = {\n    ...operationOptionsToRequestParameters(options),\n  };\n\n  validateVectorStoreId(vectorStoreId);\n  const result = await context\n    .path(\"/vector_stores/{vectorStoreId}\", vectorStoreId)\n    .delete(deleteOptions);\n\n  if (!expectedStatuses.includes(result.status)) {\n    throw createOpenAIError(result);\n  }\n  return ConvertFromWire.convertVectorStoreDeletionStatusOutput(result.body);\n}\n\n/**\n * Creates a vector store and poll.\n */\nexport function createVectorStoreAndPoll(\n  context: Client,\n  options: CreateVectorStoreOptionalParams = {},\n): PollerLike<OperationState<VectorStoreOutput>, VectorStoreOutput> {\n  return createPoller<VectorStoreOutput>({\n    initOperation: async () => {\n      return createVectorStoreInternal(context, options);\n    },\n    pollOperation: async (currentResult: VectorStoreOutput) => {\n      return getVectorStore(context, currentResult.id, options);\n    },\n    getOperationStatus: getLroOperationStatus,\n    intervalInMs: options.pollingOptions?.sleepIntervalInMs,\n  });\n}\n\nasync function createVectorStoreInternal(\n  context: Client,\n  options: CreateVectorStoreOptionalParams = {},\n): Promise<VectorStoreOutput> {\n  const createOptions: GeneratedParameters.CreateVectorStoreParameters = {\n    ...operationOptionsToRequestParameters(options),\n    body: ConvertToWire.convertVectorStoreOptions(options),\n  };\n\n  validateCreateVectorStoreParameters(createOptions);\n  const result = await context.path(\"/vector_stores\").post(createOptions);\n\n  if (!expectedStatuses.includes(result.status)) {\n    throw createOpenAIError(result);\n  }\n  return ConvertFromWire.convertVectorStoreOutput(result.body);\n}\n\nfunction getLroOperationStatus(result: VectorStoreOutput): OperationStatus {\n  switch (result.status) {\n    case \"in_progress\":\n      return \"running\";\n    case \"completed\":\n      return \"succeeded\";\n    case \"expired\":\n      return \"failed\";\n    default:\n      return \"failed\";\n  }\n}\n\nfunction validateListVectorStoresParameters(options?: ListVectorStoresParameters): void {\n  if (options?.queryParameters?.limit) {\n    validateLimit(options.queryParameters.limit);\n  }\n  if (options?.queryParameters?.order) {\n    validateOrder(options.queryParameters.order);\n  }\n}\n\nfunction validateCreateVectorStoreParameters(options?: CreateVectorStoreParameters): void {\n  if (\n    options?.body?.chunking_strategy &&\n    (!options.body.file_ids || options.body.file_ids.length === 0)\n  ) {\n    throw new Error(\"Chunking strategy is only applicable if fileIds is non-empty\");\n  }\n  if (options?.body?.metadata) {\n    validateMetadata(options.body.metadata);\n  }\n}\n\nfunction validateModifyVectorStoreParameters(options?: ModifyVectorStoreParameters): void {\n  if (options?.body?.metadata) {\n    validateMetadata(options.body.metadata);\n  }\n}\n"]}