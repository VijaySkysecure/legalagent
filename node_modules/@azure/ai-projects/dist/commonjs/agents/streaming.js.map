{"version":3,"file":"streaming.js","sourceRoot":"","sources":["../../../src/agents/streaming.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { Client, StreamableMethod } from \"@azure-rest/core-client\";\nimport type {\n  CreateRunParameters,\n  CreateThreadAndRunBodyParam,\n  SubmitToolOutputsToRunParameters,\n} from \"../generated/src/index.js\";\nimport {\n  MessageStreamEvent,\n  RunStepStreamEvent,\n  RunStreamEvent,\n  ThreadStreamEvent,\n  type AgentEventMessage,\n  type AgentEventMessageStream,\n  type AgentEventStreamDataOutput,\n} from \"./streamingModels.js\";\nimport type { EventMessage, EventMessageStream } from \"@azure/core-sse\";\nimport { createSseStream } from \"@azure/core-sse\";\nimport { isNodeLike } from \"@azure/core-util\";\nimport type { IncomingMessage } from \"http\";\nimport {\n  validateMessages,\n  validateMetadata,\n  validateRunId,\n  validateThreadId,\n  validateToolResources,\n  validateTools,\n  validateTruncationStrategy,\n} from \"./inputValidations.js\";\nimport { createOpenAIError } from \"./openAIError.js\";\nimport {\n  convertAgentThreadOutput,\n  convertMessageDeltaChunkOutput,\n  convertRunStepDeltaChunk,\n  convertRunStepOutput,\n  convertThreadMessageOutput,\n  convertThreadRunOutput,\n} from \"../customization/convertOutputModelsFromWire.js\";\nimport { logger } from \"../logger.js\";\n\nconst expectedStatuses = [\"200\"];\n\nconst handlers = [\n  { events: Object.values(ThreadStreamEvent) as string[], converter: convertAgentThreadOutput },\n  { events: Object.values(RunStreamEvent) as string[], converter: convertThreadRunOutput },\n  { events: Object.values(RunStepStreamEvent) as string[], converter: convertRunStepOutput },\n  { events: Object.values(MessageStreamEvent) as string[], converter: convertThreadMessageOutput },\n];\n\nfunction createAgentStream(stream: EventMessageStream): AgentEventMessageStream {\n  const asyncIterator = toAsyncIterable(stream);\n  const asyncDisposable = stream as AsyncDisposable;\n  return Object.assign(asyncIterator, asyncDisposable);\n}\n\nasync function* toAsyncIterable(stream: EventMessageStream): AsyncIterable<AgentEventMessage> {\n  for await (const event of stream) {\n    const data = deserializeEventData(event);\n    yield { data: data, event: event.event };\n  }\n}\n\nfunction deserializeEventData(event: EventMessage): AgentEventStreamDataOutput {\n  try {\n    const jsonData = JSON.parse(event.data);\n    switch (event.event) {\n      case MessageStreamEvent.ThreadMessageDelta:\n        return convertMessageDeltaChunkOutput(jsonData);\n      case RunStepStreamEvent.ThreadRunStepDelta:\n        return convertRunStepDeltaChunk(jsonData);\n      default: {\n        for (const { events, converter } of handlers) {\n          if (events.includes(event.event)) {\n            return converter(jsonData);\n          }\n        }\n\n        return jsonData;\n      }\n    }\n  } catch (ex) {\n    logger.error(`Failed to parse event data  ${event.event} - error: ${ex}`);\n    return event.data;\n  }\n}\n\nasync function processStream(streamResponse: StreamableMethod): Promise<AgentEventMessageStream> {\n  const result = isNodeLike\n    ? await streamResponse.asNodeStream()\n    : await streamResponse.asBrowserStream();\n\n  if (!expectedStatuses.includes(result.status)) {\n    throw createOpenAIError(result);\n  }\n  if (!result.body) {\n    throw new Error(\"No body in response\");\n  }\n\n  const stream = isNodeLike\n    ? createSseStream(result.body as IncomingMessage)\n    : createSseStream(result.body as ReadableStream<Uint8Array>);\n  return createAgentStream(stream);\n}\n\n/** Create a run and stream the events */\nexport async function createRunStreaming(\n  context: Client,\n  threadId: string,\n  options: CreateRunParameters,\n): Promise<AgentEventMessageStream> {\n  validateThreadId(threadId);\n  validateCreateThreadAndRunBodyParam(options);\n  options.body.stream = true;\n\n  return processStream(context.path(\"/threads/{threadId}/runs\", threadId).post(options));\n}\n\n/** Create a thread and run and stream the events */\nexport async function createThreadAndRunStreaming(\n  context: Client,\n  options: CreateThreadAndRunBodyParam,\n): Promise<AgentEventMessageStream> {\n  validateCreateThreadAndRunBodyParam(options);\n  options.body.stream = true;\n  return processStream(context.path(\"/threads/runs\").post(options));\n}\n\nexport async function submitToolOutputsToRunStreaming(\n  context: Client,\n  threadId: string,\n  runId: string,\n  options: SubmitToolOutputsToRunParameters,\n): Promise<AgentEventMessageStream> {\n  validateThreadId(threadId);\n  validateRunId(runId);\n  options.body.stream = true;\n\n  return processStream(\n    context\n      .path(\"/threads/{threadId}/runs/{runId}/submit_tool_outputs\", threadId, runId)\n      .post(options),\n  );\n}\n\nfunction validateCreateThreadAndRunBodyParam(\n  options: CreateRunParameters | CreateThreadAndRunBodyParam,\n): void {\n  if (\"additional_messages\" in options.body && options.body.additional_messages) {\n    options.body.additional_messages.forEach((message) => validateMessages(message.role));\n  }\n  if (\"thread\" in options.body && options.body.thread?.messages) {\n    options.body.thread?.messages.forEach((message) => validateMessages(message.role));\n  }\n  if (options.body.tools) {\n    validateTools(options.body.tools);\n  }\n  if (\"tool_resources\" in options.body && options?.body.tool_resources) {\n    validateToolResources(options.body.tool_resources);\n  }\n  if (options.body.temperature && (options.body.temperature < 0 || options.body.temperature > 2)) {\n    throw new Error(\"Temperature must be between 0 and 2\");\n  }\n  if (options.body.tool_choice && typeof options.body.tool_choice !== \"string\") {\n    validateTools([options.body.tool_choice]);\n  }\n  if (options.body.truncation_strategy?.type) {\n    validateTruncationStrategy(options.body.truncation_strategy.type);\n  }\n  if (options.body.response_format) {\n    if (![\"json\", \"text\"].includes(options.body.response_format as string)) {\n      throw new Error(\"Response format must be either 'json' or 'text'\");\n    }\n  }\n  if (options?.body.metadata) {\n    validateMetadata(options.body.metadata);\n  }\n}\n"]}