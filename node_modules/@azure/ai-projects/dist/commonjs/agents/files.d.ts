import type { Client, StreamableMethod } from "@azure-rest/core-client";
import type { FileDeletionStatusOutput, FileListResponseOutput, OpenAIFileOutput } from "../customization/outputModels.js";
import type { FilePurpose as CustomizedFilePurpose } from "../customization/models.js";
import type { DeleteFileOptionalParams, GetFileContentOptionalParams, GetFileOptionalParams, ListFilesOptionalParams, UploadFileOptionalParams } from "./customModels.js";
import type { OperationState, PollerLike } from "@azure/core-lro";
/** Gets a list of previously uploaded files. */
export declare function listFiles(context: Client, options?: ListFilesOptionalParams): Promise<FileListResponseOutput>;
/** Uploads a file for use by other operations. */
export declare function uploadFile(context: Client, content: ReadableStream | NodeJS.ReadableStream, purpose: CustomizedFilePurpose, options?: UploadFileOptionalParams): PollerLike<OperationState<OpenAIFileOutput>, OpenAIFileOutput>;
export declare function uploadFileAndPoll(context: Client, content: ReadableStream | NodeJS.ReadableStream, purpose: CustomizedFilePurpose, options?: UploadFileOptionalParams): PollerLike<OperationState<OpenAIFileOutput>, OpenAIFileOutput>;
/** Delete a previously uploaded file. */
export declare function deleteFile(context: Client, fileId: string, options?: DeleteFileOptionalParams): Promise<FileDeletionStatusOutput>;
/** Returns information about a specific file. Does not retrieve file content. */
export declare function getFile(context: Client, fileId: string, options?: GetFileOptionalParams): Promise<OpenAIFileOutput>;
/** Returns file content. */
export declare function getFileContent(context: Client, fileId: string, options?: GetFileContentOptionalParams): StreamableMethod<string | Uint8Array>;
export declare function uploadFileInternal(context: Client, content: ReadableStream | NodeJS.ReadableStream, purpose: CustomizedFilePurpose, options?: UploadFileOptionalParams): Promise<OpenAIFileOutput>;
//# sourceMappingURL=files.d.ts.map