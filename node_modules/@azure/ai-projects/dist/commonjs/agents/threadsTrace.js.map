{"version":3,"file":"threadsTrace.js","sourceRoot":"","sources":["../../../src/agents/threadsTrace.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AAQlC,wDAOC;AAED,oDAOC;AApBD,8CAAqE;AAErE,uDAA+E;AAE/E,SAAgB,sBAAsB,CAAC,IAAU,EAAE,OAA+B;IAChF,2BAAc,CAAC,iBAAiB,CAC9B,IAAI,EACJ,iCAAoB,CAAC,aAAa,EAClC,IAAA,2CAAyB,EAAC,EAAE,CAAC,CAC9B,CAAC;IACF,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC/B,CAAC;AAEM,KAAK,UAAU,oBAAoB,CACxC,IAAU,EACV,QAAgC,EAChC,MAAkC;IAElC,MAAM,cAAc,GAAG,MAAM,MAAM,CAAC;IACpC,2BAAc,CAAC,oBAAoB,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,cAAc,CAAC,EAAE,EAAE,CAAC,CAAC;AAC7E,CAAC;AAED,SAAS,aAAa,CAAC,IAAU,EAAE,OAA+B;;IAChE,MAAA,OAAO,CAAC,IAAI,CAAC,QAAQ,0CAAE,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QACzC,IAAA,iCAAe,EAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AgentThreadOutput } from \"../generated/src/outputModels.js\";\nimport type { Span } from \"../tracing.js\";\nimport { TracingUtility, TracingOperationName } from \"../tracing.js\";\nimport type { CreateThreadParameters } from \"../generated/src/parameters.js\";\nimport { addMessageEvent, UpdateWithAgentAttributes } from \"./traceUtility.js\";\n\nexport function traceStartCreateThread(span: Span, options: CreateThreadParameters): void {\n  TracingUtility.setSpanAttributes(\n    span,\n    TracingOperationName.CREATE_THREAD,\n    UpdateWithAgentAttributes({}),\n  );\n  setSpanEvents(span, options);\n}\n\nexport async function traceEndCreateThread(\n  span: Span,\n  _options: CreateThreadParameters,\n  result: Promise<AgentThreadOutput>,\n): Promise<void> {\n  const resolvedResult = await result;\n  TracingUtility.updateSpanAttributes(span, { threadId: resolvedResult.id });\n}\n\nfunction setSpanEvents(span: Span, options: CreateThreadParameters): void {\n  options.body.messages?.forEach((message) => {\n    addMessageEvent(span, message);\n  });\n}\n"]}