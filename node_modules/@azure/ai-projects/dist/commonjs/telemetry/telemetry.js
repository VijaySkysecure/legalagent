"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateTelemetryOptions = updateTelemetryOptions;
exports.getTelemetryOptions = getTelemetryOptions;
exports.resetTelemetryOptions = resetTelemetryOptions;
exports.getConnectionString = getConnectionString;
const core_client_1 = require("@azure-rest/core-client");
const expectedStatuses = ["200"];
const telemetryOptions = {
    enableContentRecording: false,
    connectionString: undefined,
};
/**
 * Update the telemetry settings
 * @param options - The telemetry options
 */
function updateTelemetryOptions(options) {
    telemetryOptions.enableContentRecording = options.enableContentRecording;
}
/**
 * Get the telemetry options
 * @returns The telemetry options
 */
function getTelemetryOptions() {
    return structuredClone(telemetryOptions);
}
/**
 * Reset the telemetry options
 */
function resetTelemetryOptions() {
    telemetryOptions.connectionString = undefined;
    telemetryOptions.enableContentRecording = false;
}
/**
 * Get the appinsights connection string confired in the workspace
 * @param connection - get the connection string
 * @returns The telemetry connection string
 */
async function getConnectionString(context, connection) {
    if (!telemetryOptions.connectionString) {
        const workspace = await connection.getWorkspace();
        if (workspace.properties.applicationInsights) {
            const result = await context
                .path("/{appInsightsResourceUrl}", workspace.properties.applicationInsights)
                .get({ skipUrlEncoding: true });
            if (!expectedStatuses.includes(result.status)) {
                throw (0, core_client_1.createRestError)(result);
            }
            telemetryOptions.connectionString = result.body.properties.ConnectionString;
        }
        else {
            throw new Error("Application Insights connection string not found.");
        }
    }
    return telemetryOptions.connectionString;
}
//# sourceMappingURL=telemetry.js.map