{"version":3,"file":"aiProjectsClient.js","sourceRoot":"","sources":["../../src/aiProjectsClient.ts"],"names":[],"mappings":";;;;AAKA,gDAAwD;AAExD,qDAAkE;AAElE,kGAA6D;AAE7D,mDAA8D;AAO9D;;GAEG;AACH,MAAa,gBAAgB;IAK3B;;;;;;OAMG;IACH,YACE,aAAqB,EACrB,cAAsB,EACtB,iBAAyB,EACzB,WAAmB,EACnB,UAA2B,EAC3B,UAAmC,EAAE;QAErC,MAAM,kBAAkB,GAAG,8CAA8C,cAAc,mBAAmB,iBAAiB,2DAA2D,WAAW,EAAE,CAAC;QACpM,IAAI,CAAC,OAAO,GAAG,IAAA,2BAAY,EACzB,aAAa,EACb,cAAc,EACd,iBAAiB,EACjB,WAAW,EACX,UAAU,EACV,OAAO,CACR,CAAC;QAEF,IAAI,CAAC,iBAAiB,GAAG,IAAA,2BAAY,EACnC,aAAa,EACb,cAAc,EACd,iBAAiB,EACjB,WAAW,EACX,UAAU,kCACL,OAAO,KAAE,QAAQ,EAAE,kBAAkB,IAC3C,CAAC;QAEF,IAAI,CAAC,gBAAgB,GAAG,IAAA,2BAAY,EAClC,aAAa,EACb,cAAc,EACd,iBAAiB,EACjB,WAAW,EACX,UAAU,kCACL,OAAO,KAAE,UAAU,EAAE,YAAY,EAAE,QAAQ,EAAE,8BAA8B,IACjF,CAAC;QAEF,IAAI,CAAC,MAAM,GAAG,IAAA,8BAAmB,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,WAAW,GAAG,IAAA,mCAAwB,EAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACpE,IAAI,CAAC,SAAS,GAAG,IAAA,iCAAsB,EAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACnF,CAAC;IAED;;;;;OAKG;IACH,MAAM,CAAC,oBAAoB,CACzB,gBAAwB,EACxB,UAA2B;IAC3B,8DAA8D;IAC9D,UAAmC,EAAE;QAErC,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,iBAAiB,EAAE,WAAW,EAAE,GACrE,gBAAgB,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;QAC3D,OAAO,IAAI,gBAAgB,CACzB,aAAa,EACb,cAAc,EACd,iBAAiB,EACjB,WAAW,EACX,UAAU,EACV,OAAO,CACR,CAAC;IACJ,CAAC;IAEO,MAAM,CAAC,qBAAqB,CAAC,gBAAwB;QAM3D,MAAM,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1C,OAAO;YACL,aAAa,EAAE,WAAW,KAAK,CAAC,CAAC,CAAC,EAAE;YACpC,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;YACxB,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;YAC3B,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;SACtB,CAAC;IACJ,CAAC;CAUF;AApGD,4CAoGC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { Client } from \"@azure-rest/core-client\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport type { AgentsOperations } from \"./agents/index.js\";\nimport { getAgentsOperations } from \"./agents/index.js\";\nimport type { ConnectionsOperations } from \"./connections/index.js\";\nimport { getConnectionsOperations } from \"./connections/index.js\";\nimport type { ProjectsClientOptions } from \"./generated/src/projectsClient.js\";\nimport createClient from \"./generated/src/projectsClient.js\";\nimport type { TelemetryOperations } from \"./telemetry/index.js\";\nimport { getTelemetryOperations } from \"./telemetry/index.js\";\n\n/**\n * The options for the AIProjectsClient\n */\nexport interface AIProjectsClientOptions extends ProjectsClientOptions {}\n\n/**\n * The Azure AI Projects client\n */\nexport class AIProjectsClient {\n  private _client: Client;\n  private _connectionClient: Client;\n  private _telemetryClient: Client;\n\n  /*\n   * @param endpointParam - The Azure AI Foundry project endpoint, in the form `https://<azure-region>.api.azureml.ms` or `https://<private-link-guid>.<azure-region>.api.azureml.ms`, where <azure-region> is the Azure region where the project is deployed (e.g. westus) and <private-link-guid> is the GUID of the Enterprise private link.\n   * @param subscriptionId - The Azure subscription ID.\n   * @param resourceGroupName - The name of the Azure Resource Group.\n   * @param projectName - The Azure AI Foundry project name.\n   * @param options - the parameter for all optional parameters\n   */\n  constructor(\n    endpointParam: string,\n    subscriptionId: string,\n    resourceGroupName: string,\n    projectName: string,\n    credential: TokenCredential,\n    options: AIProjectsClientOptions = {},\n  ) {\n    const connectionEndPoint = `https://management.azure.com/subscriptions/${subscriptionId}/resourceGroups/${resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/${projectName}`;\n    this._client = createClient(\n      endpointParam,\n      subscriptionId,\n      resourceGroupName,\n      projectName,\n      credential,\n      options,\n    );\n\n    this._connectionClient = createClient(\n      endpointParam,\n      subscriptionId,\n      resourceGroupName,\n      projectName,\n      credential,\n      { ...options, endpoint: connectionEndPoint },\n    );\n\n    this._telemetryClient = createClient(\n      endpointParam,\n      subscriptionId,\n      resourceGroupName,\n      projectName,\n      credential,\n      { ...options, apiVersion: \"2020-02-02\", endpoint: \"https://management.azure.com\" },\n    );\n\n    this.agents = getAgentsOperations(this._client);\n    this.connections = getConnectionsOperations(this._connectionClient);\n    this.telemetry = getTelemetryOperations(this._telemetryClient, this.connections);\n  }\n\n  /**\n   * Creates a new instance of AzureAIProjectsClient\n   * @param connectionString - Connection string with the endpoint, subscriptionId, resourceGroupName, and projectName\n   * @param credential - The credential to use\n   * @param options - The parameter for all optional parameters\n   */\n  static fromConnectionString(\n    connectionString: string,\n    credential: TokenCredential,\n    // eslint-disable-next-line @azure/azure-sdk/ts-naming-options\n    options: AIProjectsClientOptions = {},\n  ): AIProjectsClient {\n    const { endpointParam, subscriptionId, resourceGroupName, projectName } =\n      AIProjectsClient.praseConnectionString(connectionString);\n    return new AIProjectsClient(\n      endpointParam,\n      subscriptionId,\n      resourceGroupName,\n      projectName,\n      credential,\n      options,\n    );\n  }\n\n  private static praseConnectionString(connectionString: string): {\n    endpointParam: string;\n    subscriptionId: string;\n    resourceGroupName: string;\n    projectName: string;\n  } {\n    const parts = connectionString.split(\";\");\n    return {\n      endpointParam: `https://${parts[0]}`,\n      subscriptionId: parts[1],\n      resourceGroupName: parts[2],\n      projectName: parts[3],\n    };\n  }\n\n  /** The operation groups for Agents */\n  public readonly agents: AgentsOperations;\n\n  /** The operation groups for connections */\n  public readonly connections: ConnectionsOperations;\n\n  /** The operation groups for telemetry */\n  public readonly telemetry: TelemetryOperations;\n}\n"]}