import type { Client } from "@azure-rest/core-client";
import type { OpenAIPageableListOfVectorStoreFileOutput, VectorStoreFileDeletionStatusOutput, VectorStoreFileOutput } from "../customization/outputModels.js";
import type { CreateVectorStoreFileOptionalParams, DeleteVectorStoreFileOptionalParams, GetVectorStoreFileOptionalParams, ListVectorStoreFilesOptionalParams } from "./customModels.js";
import type { OperationState, PollerLike } from "@azure/core-lro";
/** Returns a list of vector store files. */
export declare function listVectorStoreFiles(context: Client, vectorStoreId: string, options?: ListVectorStoreFilesOptionalParams): Promise<OpenAIPageableListOfVectorStoreFileOutput>;
/** Create a vector store file by attaching a file to a vector store. */
export declare function createVectorStoreFile(context: Client, vectorStoreId: string, options?: CreateVectorStoreFileOptionalParams): PollerLike<OperationState<VectorStoreFileOutput>, VectorStoreFileOutput>;
/** Retrieves a vector store file. */
export declare function getVectorStoreFile(context: Client, vectorStoreId: string, fileId: string, options?: GetVectorStoreFileOptionalParams): Promise<VectorStoreFileOutput>;
/**
 * Delete a vector store file. This will remove the file from the vector store but the file itself will not be deleted.
 * To delete the file, use the delete file endpoint.
 */
export declare function deleteVectorStoreFile(context: Client, vectorStoreId: string, fileId: string, options?: DeleteVectorStoreFileOptionalParams): Promise<VectorStoreFileDeletionStatusOutput>;
/** Create a vector store file by attaching a file to a vector store and poll. */
export declare function createVectorStoreFileAndPoll(context: Client, vectorStoreId: string, options?: CreateVectorStoreFileOptionalParams): PollerLike<OperationState<VectorStoreFileOutput>, VectorStoreFileOutput>;
//# sourceMappingURL=vectorStoresFiles.d.ts.map