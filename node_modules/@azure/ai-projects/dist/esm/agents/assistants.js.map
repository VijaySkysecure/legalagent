{"version":3,"file":"assistants.js","sourceRoot":"","sources":["../../../src/agents/assistants.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { Client } from \"@azure-rest/core-client\";\nimport { operationOptionsToRequestParameters } from \"@azure-rest/core-client\";\nimport type {\n  AgentDeletionStatusOutput,\n  AgentOutput,\n  OpenAIPageableListOfAgentOutput,\n} from \"../customization/outputModels.js\";\nimport {\n  validateLimit,\n  validateMetadata,\n  validateOrder,\n  validateVectorStoreDataType,\n} from \"./inputValidations.js\";\nimport { TracingUtility } from \"../tracing.js\";\nimport { traceEndCreateOrUpdateAgent, traceStartCreateOrUpdateAgent } from \"./assistantsTrace.js\";\nimport { traceEndAgentGeneric, traceStartAgentGeneric } from \"./traceUtility.js\";\nimport type {\n  CreateAgentOptionalParams,\n  DeleteAgentOptionalParams,\n  GetAgentOptionalParams,\n  ListAgentsOptionalParams,\n  UpdateAgentOptionalParams,\n} from \"./customModels.js\";\nimport type * as GeneratedParameters from \"../generated/src/parameters.js\";\nimport * as ConvertFromWire from \"../customization/convertOutputModelsFromWire.js\";\nimport * as ConverterToWire from \"../customization/convertModelsToWrite.js\";\nimport { convertToListQueryParameters } from \"../customization/convertParametersToWire.js\";\nimport { createOpenAIError } from \"./openAIError.js\";\n\nconst expectedStatuses = [\"200\"];\n\nenum Tools {\n  CodeInterpreter = \"code_interpreter\",\n  FileSearch = \"file_search\",\n  Function = \"function\",\n  BingGrounding = \"bing_grounding\",\n  MicrosoftFabric = \"fabric_dataagent\",\n  SharepointGrounding = \"sharepoint_grounding\",\n  AzureAISearch = \"azure_ai_search\",\n  OpenApi = \"openapi\",\n  AzureFunction = \"azure_function\",\n}\n\n/** Creates a new agent. */\nexport async function createAgent(\n  context: Client,\n  model: string,\n  options: CreateAgentOptionalParams = {},\n): Promise<AgentOutput> {\n  const createOptions: GeneratedParameters.CreateAgentParameters = {\n    ...operationOptionsToRequestParameters(options),\n    body: {\n      ...ConverterToWire.convertCreateAgentOptions({ ...options, model }),\n    },\n  };\n\n  validateCreateAgentParameters(createOptions);\n  const response = await TracingUtility.withSpan(\n    \"CreateAgent\",\n    createOptions,\n    async (updatedOptions) => {\n      const result = await context.path(\"/assistants\").post(updatedOptions);\n      if (!expectedStatuses.includes(result.status)) {\n        throw createOpenAIError(result);\n      }\n      return result.body;\n    },\n    traceStartCreateOrUpdateAgent,\n    traceEndCreateOrUpdateAgent,\n  );\n  return ConvertFromWire.convertAgentOutput(response);\n}\n\n/** Gets a list of agents that were previously created. */\nexport async function listAgents(\n  context: Client,\n  options: ListAgentsOptionalParams = {},\n): Promise<OpenAIPageableListOfAgentOutput> {\n  const listAgentsOptions: GeneratedParameters.ListAgentsParameters = {\n    ...operationOptionsToRequestParameters(options),\n    queryParameters: convertToListQueryParameters(options),\n  };\n\n  validateListAgentsParameters(listAgentsOptions);\n  const response = await TracingUtility.withSpan(\n    \"ListAgents\",\n    listAgentsOptions || {},\n    async (updateOptions) => {\n      const result = await context.path(\"/assistants\").get(updateOptions);\n      if (!expectedStatuses.includes(result.status)) {\n        throw createOpenAIError(result);\n      }\n      return result.body;\n    },\n  );\n\n  return ConvertFromWire.convertOpenAIPageableListOfAgentOutput(response);\n}\n\n/** Retrieves an existing agent. */\nexport async function getAgent(\n  context: Client,\n  assistantId: string,\n  options: GetAgentOptionalParams = {},\n): Promise<AgentOutput> {\n  const getAgentOptions: GeneratedParameters.GetAgentParameters = {\n    ...operationOptionsToRequestParameters(options),\n  };\n\n  validateAssistantId(assistantId);\n  const response = await TracingUtility.withSpan(\n    \"GetAgent\",\n    getAgentOptions,\n    async (updateOptions) => {\n      const result = await context\n        .path(\"/assistants/{assistantId}\", assistantId)\n        .get(updateOptions);\n      if (!expectedStatuses.includes(result.status)) {\n        throw createOpenAIError(result);\n      }\n      return result.body;\n    },\n    (span, updatedOptions) =>\n      traceStartAgentGeneric(span, {\n        ...updatedOptions,\n        tracingAttributeOptions: { agentId: assistantId },\n      }),\n  );\n\n  return ConvertFromWire.convertAgentOutput(response);\n}\n\n/** Modifies an existing agent. */\nexport async function updateAgent(\n  context: Client,\n  assistantId: string,\n  options: UpdateAgentOptionalParams = {},\n): Promise<AgentOutput> {\n  const updateAgentOptions: GeneratedParameters.UpdateAgentParameters = {\n    ...operationOptionsToRequestParameters(options),\n    body: {\n      ...ConverterToWire.convertUpdateAgentOptions(options),\n    },\n  };\n\n  validateUpdateAgentParameters(assistantId, updateAgentOptions);\n  const response = await TracingUtility.withSpan(\n    \"UpdateAgent\",\n    updateAgentOptions,\n    async (updateOptions) => {\n      const result = await context\n        .path(\"/assistants/{assistantId}\", assistantId)\n        .post(updateOptions);\n      if (!expectedStatuses.includes(result.status)) {\n        throw createOpenAIError(result);\n      }\n      return result.body;\n    },\n    (span, updatedOptions) => traceStartCreateOrUpdateAgent(span, updatedOptions, assistantId),\n    traceEndCreateOrUpdateAgent,\n  );\n  return ConvertFromWire.convertAgentOutput(response);\n}\n\n/** Deletes an agent. */\nexport async function deleteAgent(\n  context: Client,\n  assistantId: string,\n  options: DeleteAgentOptionalParams = {},\n): Promise<AgentDeletionStatusOutput> {\n  const deleteAgentOptions: GeneratedParameters.DeleteAgentParameters = {\n    ...operationOptionsToRequestParameters(options),\n  };\n\n  validateAssistantId(assistantId);\n  const response = await TracingUtility.withSpan(\n    \"DeleteAgent\",\n    deleteAgentOptions,\n    async (updateOptions) => {\n      const result = await context\n        .path(\"/assistants/{assistantId}\", assistantId)\n        .delete(updateOptions);\n      if (!expectedStatuses.includes(result.status)) {\n        throw createOpenAIError(result);\n      }\n      return result.body;\n    },\n    traceStartAgentGeneric,\n    traceEndAgentGeneric,\n  );\n  return ConvertFromWire.convertAgentDeletionStatusOutput(response);\n}\n\nfunction validateCreateAgentParameters(\n  options: GeneratedParameters.CreateAgentParameters | GeneratedParameters.UpdateAgentParameters,\n): void {\n  if (options.body.tools) {\n    if (options.body.tools.some((value) => !Object.values(Tools).includes(value.type as Tools))) {\n      throw new Error(\n        \"Tool type must be one of 'code_interpreter', 'file_search', 'function', 'bing_grounding', 'fabric_dataagent', 'sharepoint_grounding', 'azure_ai_search', 'azure_function'\",\n      );\n    }\n  }\n  if (options.body.tool_resources) {\n    if (options.body.tool_resources.code_interpreter) {\n      if (\n        options.body.tool_resources.code_interpreter.file_ids &&\n        options.body.tool_resources.code_interpreter.data_sources\n      ) {\n        throw new Error(\"Only file_ids or data_sources can be provided, not both\");\n      }\n      if (\n        options.body.tool_resources.code_interpreter.file_ids &&\n        options.body.tool_resources.code_interpreter.file_ids.length > 20\n      ) {\n        throw new Error(\"A maximum of 20 file IDs are allowed\");\n      }\n      if (options.body.tool_resources.code_interpreter.data_sources) {\n        validateVectorStoreDataType(options.body.tool_resources.code_interpreter.data_sources);\n      }\n    }\n    if (options.body.tool_resources.file_search) {\n      if (\n        options.body.tool_resources.file_search.vector_store_ids &&\n        options.body.tool_resources.file_search.vector_store_ids.length > 1\n      ) {\n        throw new Error(\"Only one vector store ID is allowed\");\n      }\n      if (options.body.tool_resources.file_search.vector_stores) {\n        if (options.body.tool_resources.file_search.vector_stores.length > 1) {\n          throw new Error(\"Only one vector store is allowed\");\n        }\n        validateVectorStoreDataType(\n          options.body.tool_resources.file_search.vector_stores[0]?.configuration.data_sources,\n        );\n      }\n    }\n    if (options.body.tool_resources.azure_ai_search) {\n      if (\n        options.body.tool_resources.azure_ai_search.indexes &&\n        options.body.tool_resources.azure_ai_search.indexes.length > 1\n      ) {\n        throw new Error(\"Only one index is allowed\");\n      }\n    }\n  }\n  if (options.body.temperature && (options.body.temperature < 0 || options.body.temperature > 2)) {\n    throw new Error(\"Temperature must be between 0 and 2\");\n  }\n  if (options.body.metadata) {\n    validateMetadata(options.body.metadata);\n  }\n}\n\nfunction validateListAgentsParameters(options?: GeneratedParameters.ListAgentsParameters): void {\n  if (options?.queryParameters?.limit) {\n    validateLimit(options.queryParameters.limit);\n  }\n  if (options?.queryParameters?.order) {\n    validateOrder(options.queryParameters.order);\n  }\n}\n\nfunction validateAssistantId(assistantId: string): void {\n  if (!assistantId) {\n    throw new Error(\"Assistant ID is required\");\n  }\n}\n\nfunction validateUpdateAgentParameters(\n  assistantId: string,\n  options?: GeneratedParameters.UpdateAgentParameters,\n): void {\n  validateAssistantId(assistantId);\n  if (options) {\n    validateCreateAgentParameters(options);\n  }\n}\n"]}