import type { Client } from "@azure-rest/core-client";
import type * as CustomOutputModels from "../customization/outputModels.js";
import type * as CustomModels from "../customization/models.js";
import type { AgentRunResponse, CreateRunOptionalParams, CancelRunOptionalParams, CreateAndRunThreadOptionalParams, GetRunOptionalParams, ListRunQueryOptionalParams, SubmitToolOutputsToRunOptionalParams, UpdateRunOptionalParams } from "./customModels.js";
/** Creates and starts a new run of the specified thread using the specified agent. */
export declare function createRun(context: Client, threadId: string, assistantId: string, options: CreateRunOptionalParams): AgentRunResponse;
/** Gets a list of runs for a specified thread. */
export declare function listRuns(context: Client, threadId: string, options?: ListRunQueryOptionalParams): Promise<CustomOutputModels.OpenAIPageableListOfThreadRunOutput>;
/** Gets an existing run from an existing thread. */
export declare function getRun(context: Client, threadId: string, runId: string, options?: GetRunOptionalParams): Promise<CustomOutputModels.ThreadRunOutput>;
/** Modifies an existing thread run. */
export declare function updateRun(context: Client, threadId: string, runId: string, options?: UpdateRunOptionalParams): Promise<CustomOutputModels.ThreadRunOutput>;
/** Submits outputs from tools as requested by tool calls in a run. Runs that need submitted tool outputs will have a status of 'requires_action' with a required_action.type of 'submit_tool_outputs'. */
export declare function submitToolOutputsToRun(context: Client, threadId: string, runId: string, toolOutputs: Array<CustomModels.ToolOutput>, options?: SubmitToolOutputsToRunOptionalParams): AgentRunResponse;
/** Cancels a run of an in progress thread. */
export declare function cancelRun(context: Client, threadId: string, runId: string, options?: CancelRunOptionalParams): Promise<CustomOutputModels.ThreadRunOutput>;
/** Creates a new thread and immediately starts a run of that thread. */
export declare function createThreadAndRun(context: Client, assistantId: string, options: CreateAndRunThreadOptionalParams): AgentRunResponse;
//# sourceMappingURL=runs.d.ts.map