// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { convertVectorStoreChunkingStrategyRequest, convertVectorStoreDataSource, } from "./convertModelsToWrite.js";
export function convertCreateVectorStoreFileBatchParam(input) {
    return {
        body: input.body && Object.assign(Object.assign(Object.assign({}, (input.body.fileIds && { file_ids: input.body.fileIds })), (input.body.dataSources && {
            data_sources: input.body.dataSources.map(convertVectorStoreDataSource),
        })), (input.body.chunkingStrategy && {
            chunking_strategy: convertVectorStoreChunkingStrategyRequest(input.body.chunkingStrategy),
        })),
    };
}
export function convertCreateVectorStoreFileParam(input) {
    return {
        body: input.body && Object.assign(Object.assign(Object.assign({}, (input.body.fileId && { file_id: input.body.fileId })), (input.body.dataSources && {
            data_sources: input.body.dataSources.map(convertVectorStoreDataSource),
        })), (input.body.chunkingStrategy && {
            chunking_strategy: convertVectorStoreChunkingStrategyRequest(input.body.chunkingStrategy),
        })),
    };
}
export function convertToListQueryParameters(options) {
    return Object.assign(Object.assign(Object.assign(Object.assign({}, (options.limit && { limit: options.limit })), (options.order && { order: options.order })), (options.after && { after: options.after })), (options.before && { before: options.before }));
}
export function convertListVectorStoreFileBatchFilesQueryParamProperties(options) {
    return Object.assign(Object.assign({}, convertToListQueryParameters(options)), (options.filter && { filter: options.filter }));
}
export function convertListFilesQueryParamProperties(options) {
    return Object.assign({}, (options.purpose && { purpose: options.purpose }));
}
//# sourceMappingURL=convertParametersToWire.js.map