{"version":3,"file":"vectorStoresModels.js","sourceRoot":"","sources":["../../../src/agents/vectorStoresModels.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  VectorStoreChunkingStrategyRequest,\n  VectorStoreDataSource,\n  VectorStoreFileStatusFilter,\n} from \"../customization/models.js\";\n\n/** Request object for creating a vector store file. */\nexport interface CreateVectorStoreFileOptions {\n  /** A File ID that the vector store should use. Useful for tools like `file_search` that can access files. */\n  fileId?: string;\n\n  /** The data sources to be used. This option is mutually exclusive with fileId. */\n  dataSources?: Array<VectorStoreDataSource>;\n\n  /** The chunking strategy used to chunk the file(s). If not set, will use the auto strategy. */\n  chunkingStrategy?: VectorStoreChunkingStrategyRequest;\n}\n\n/** Request object for creating a vector store file batch. */\nexport interface CreateVectorStoreFileBatchOptions {\n  /** A list of File IDs that the vector store should use. Useful for tools like `file_search` that can access files. */\n  fileIds?: string[];\n\n  /** The data sources to be used. This option is mutually exclusive with fileId. */\n  dataSources?: VectorStoreDataSource[];\n\n  /** The chunking strategy used to chunk the file(s). If not set, will use the auto strategy. */\n  chunkingStrategy?: VectorStoreChunkingStrategyRequest;\n}\n\n/** Filter by file status. */\nexport interface FileStatusFilter {\n  /**\n   * Possible values: \"in_progress\", \"completed\", \"failed\", \"cancelled\"\n   */\n  filter?: VectorStoreFileStatusFilter;\n}\n"]}