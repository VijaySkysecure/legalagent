{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/telemetry/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAIlC,OAAO,EACL,mBAAmB,EACnB,mBAAmB,EACnB,qBAAqB,EACrB,sBAAsB,GACvB,MAAM,gBAAgB,CAAC;AA6BxB;;;;IAII;AACJ,MAAM,UAAU,sBAAsB,CACpC,OAAe,EACf,UAAiC;IAEjC,qBAAqB,EAAE,CAAC;IACxB,OAAO;QACL,mBAAmB,EAAE,GAAG,EAAE,CACxB,mBAAmB,CAAC,OAAO,EAAE,UAA2C,CAAC;QAC3E,cAAc,EAAE,CAAC,OAAyB,EAAE,EAAE,CAAC,sBAAsB,CAAC,OAAO,CAAC;QAC9E,WAAW,EAAE,GAAG,EAAE,CAAC,mBAAmB,EAAE;KACzC,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { Client } from \"@azure-rest/core-client\";\nimport type { TelemetryOptions } from \"./telemetry.js\";\nimport {\n  getConnectionString,\n  getTelemetryOptions,\n  resetTelemetryOptions,\n  updateTelemetryOptions,\n} from \"./telemetry.js\";\nimport type { ConnectionsInternalOperations } from \"../connections/internalModels.js\";\nimport type { ConnectionsOperations } from \"../connections/customModels.js\";\nexport { TelemetryOptions } from \"./telemetry.js\";\n\n/**\n * Telemetry operations\n **/\nexport interface TelemetryOperations {\n  /**\n   * Get the appinsights connection string confired in the workspace\n   * @returns The telemetry connection string\n   **/\n  getConnectionString(): Promise<string>;\n\n  /**\n   * Update the telemetry settings\n   * @param options - The telemetry options\n   * @returns void\n   * */\n  updateSettings(options: TelemetryOptions): void;\n\n  /**\n   * get the telemetry settings\n   * @returns The telemetry options\n   * */\n  getSettings(): TelemetryOptions;\n}\n\n/**\n * Get the telemetry operations\n * @param connection - The connections operations\n * @returns The telemetry operations\n **/\nexport function getTelemetryOperations(\n  context: Client,\n  connection: ConnectionsOperations,\n): TelemetryOperations {\n  resetTelemetryOptions();\n  return {\n    getConnectionString: () =>\n      getConnectionString(context, connection as ConnectionsInternalOperations),\n    updateSettings: (options: TelemetryOptions) => updateTelemetryOptions(options),\n    getSettings: () => getTelemetryOptions(),\n  };\n}\n"]}